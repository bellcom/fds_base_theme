<?php
include(dirname(__FILE__) . '/include/settings.inc');

use Drupal\image\Entity\ImageStyle;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_menu().
 */
function fds_base_theme_preprocess_menu(&$variables, $hook) {

  if ($hook == 'menu') {
    $current_path = \Drupal::request()->getRequestUri();

    foreach ($variables['items'] as &$item) {

      if ($item['in_active_trail']) {

        if ($item['url']->toString() == $current_path) {
          $item['is_active'] = TRUE;
        } elseif (count($item['below'])) {
          _fds_base_theme_menu_process_submenu($item['below'], $current_path);
        }
      }
    }
  }
}

/**
 * Set active and active-trail class for sub-menus recursively.
 */
function _fds_base_theme_menu_process_submenu(&$submenu, $current_path) {
  foreach ($submenu as &$item) {
    if ($item['in_active_trail']) {
      if ($item['url']->toString() == $current_path) {
        $item['is_active'] = TRUE;
      } elseif (count($item['below'])) {
        _fds_base_theme_menu_process_submenu($item['below'], $current_path);
      }
    }
  }
}


/**
 * Implements hook_preprocess_page().
 */
function fds_base_theme_preprocess_page(array &$variables) {

  // Theme settings
  $variables['theme_settings'] = _fds_base_theme_collect_theme_settings();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function fds_base_theme_preprocess_taxonomy_term(&$variables) {
  $term = $variables['term'];
  $view_mode = $variables['view_mode'];

  // Entity variables
  $variables['attributes']['class'][] = HTML::cleanCssIdentifier('entity-' . $view_mode);
  $variables['attributes']['class'][] = HTML::cleanCssIdentifier('entity-' . $view_mode . '--' . $term->bundle());
}

/**
 * Implements hook_preprocess_HOOK().
 */
function fds_base_theme_preprocess_node(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];

  // Entity variables
  $variables['attributes']['class'][] = HTML::cleanCssIdentifier('entity-' . $view_mode);
  $variables['attributes']['class'][] = HTML::cleanCssIdentifier('entity-' . $view_mode . '--' . $node->getType());
}

/**
 * Implements hook_preprocess_HOOK().
 */
function fds_base_theme_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $view_mode = $variables['view_mode'];

  // Entity variables
  $variables['attributes']['class'][] = HTML::cleanCssIdentifier('entity-' . $view_mode);
  $variables['attributes']['class'][] = HTML::cleanCssIdentifier('entity-' . $view_mode . '--' . $paragraph->getType());
}

/**
 * Implements hook_preprocess_HOOK().
 */
function fds_base_theme_preprocess_block(array &$variables) {
  $variables['content']['#attributes']['block'] = $variables['elements']['#id'];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function fds_base_theme_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (!empty($variables['attributes']['block'])) {
    $block = Drupal\block\Entity\Block::load($variables['attributes']['block']);

    $suggestions[] = 'menu__' . $block->getRegion();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function fds_base_theme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id'])) {
    $block = Drupal\block\Entity\Block::load($variables['elements']['#id']);

    $suggestions[] = 'block__' . $block->getRegion();
    $suggestions[] = 'block__' . $variables['elements']['#plugin_id'] . '__' . $block->getRegion();
  }
}

/**
 * Implements hook_theme_preprocess_menu_local_task().
 */
function fds_base_theme_preprocess_menu_local_task(&$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'button';

  // Active link.
  if ($variables['element']['#active'] === true) {
    $variables['link']['#options']['attributes']['class'][] = 'button-primary';
  }
  // Not active.
  else {
    $variables['link']['#options']['attributes']['class'][] = 'button-secondary';
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function fds_base_theme_preprocess_paragraph__os2web_banner_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];

  // Background image.
  if ($paragraph->field_os2web_banner_bg_image && !$paragraph->field_os2web_banner_bg_image->isEmpty()) {
//    $image_uri   = $paragraph->field_os2web_banner_bg_image->entity->image->getFileUri();
//    $image_style = ImageStyle::load('os2web_banner_paragraph');
//    $image_url   = $image_style->buildUrl($image_uri);

//    $variables['background_image'] = $image_url;
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function fds_base_theme_preprocess_paragraph__os2web_wrapper(&$variables) {
  $paragraph = $variables['paragraph'];
  if ($paragraph->field_os2web_con_type && $paragraph->field_os2web_con_type->value) {
    $variables['container_type'] = $paragraph->field_os2web_con_type->value;
  }
  if ($paragraph->field_os2web_bg_color && $paragraph->field_os2web_bg_color->value) {
    $variables['background_color'] = $paragraph->field_os2web_bg_color->value;
  }
}

/*
 * Implements template_preprocess_field.
 */
function fds_base_theme_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];

  if ($element['#field_name'] == 'field_os2web_banner_links') {

    foreach ($variables['items'] as $delta => &$item) {
      $item['content']['#options']['attributes']['class'][] = 'button button-primary';
    }
  }
}
